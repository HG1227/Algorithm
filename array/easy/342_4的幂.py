#!/usr/bin/python
#coding:utf-8

"""
@software: PyCharm
@file: 342_4的幂.py
"""

'''
给定一个整数 (32 位有符号整数)，请编写一个函数来判断它是否是 4 的幂次方。

示例 1:

输入: 16
输出: true
示例 2:

输入: 5
输出: false
'''

'''
给定一个整数 (32 位有符号整数)，请编写一个函数来判断它是否是 4 的幂次方。

示例 1:

输入: 16
输出: true
示例 2:

输入: 5
输出: false

'''


class Solution(object):
    def isPowerOfFour(self, num):
        """
        :type num: int
        :rtype: bool
        """
        '''
        其次，观察4的幂的二进制表示可以发现，其长度总为奇数，也就是说，
        1的位置总是在奇数位上。
        因此如果有一个数的二进制表示只有奇数位上为1，那么这个数和4的幂做与运算，
        得到的还是4的幂本身。
        题目要求的是32位整数，因此这个数就是0b1010101010101010101010101010101，这么长看起来很不优雅，
        所以我们可以将它转化为16进制表示0x55555555，这样看起来就好多了。

        '''
        return num > 0 and (num & num - 1) == 0 and (num & 0x55555555) == num
        # return num > 0 and (num & num - 1) == 0 and (num - 1) % 3 == 0
